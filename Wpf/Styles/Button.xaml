<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Common.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CustomFlatButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="{StaticResource FontMain}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_Border" CornerRadius="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={StaticResource OrangeBrush}}">
                            <ContentPresenter x:Name="PART_Content" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding }"
                                      TextElement.FontFamily="{TemplateBinding FontFamily}"
                                      TextElement.FontSize="{TemplateBinding FontSize}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="TextAlignment" Value="Center"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="PART_Border" Value="{StaticResource OrangeMediumBrush}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource GrayBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="PART_Border" Value="{StaticResource OrangeMediumLightBrush}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource GrayBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Border" Value="{StaticResource LightGrayBrush}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource GrayBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="PART_Content" Value="{StaticResource GrayBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="FlatToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                          ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeLightBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="FlatToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template" Value="{StaticResource FlatToggleButtonTemplate}"/>
    </Style>

    <Style x:Key="FlatRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource FlatToggleButton}"/>
</ResourceDictionary>